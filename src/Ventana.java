
import formas.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.Stroke;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * @author Gonzalo de las Heras
 * @version v0.5
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Objeto de tipo <code>BufferImage</code> que almacena el buffer del panel
     * y un buffer del tamaño del panel y de color blanco.
     */
    private final BufferedImage bufferPanel, vacio;
    /**
     * Objeto genérico de tipo <code>Color</code> que se empleará para almacenar
     * el color seleccionado para el trazo.
     */
    private Color colorTrazoSelec;
    /**
     * Objeto genérico de tipo <code>Color</code> que se empleará para almacenar
     * el color seleccionado para el relleno de las figuras.
     */
    private Color colorRellenoSelec;
    /**
     * Variable de tipo <code>int</code> que almacena el valor de la opción de
     * dibujado que está seleccionada
     *
     * -Opcion 1: Circulo<br> Opcion 2: Cuadrado<br> Opcion 3: Linea<br> Opcion
     * 4: Libre<br> -Opcion 5: Elipse<br> -Opcion 6: Rectangulo.
     */
    private int opcion;
    /**
     * Variable de tipo <code>int</code> que almacena el valor del alto del
     * panel.
     */
    private final int alto;
    /**
     * Variable de tipo <code>int</code> que almacena el valor del ancho del
     * panel.
     */
    private final int ancho;
    /**
     * Variable de tipo <code>int</code> que almacena el valor del cursor
     * correspondiente a cada opción.
     */
    private int selecCursor;
    /**
     * Variable de tipo <code>int</code> que apunta a una posición de la
     * <code>ArrayList</code> de objetos gráfico dibujados.
     */
    private int actual;
    /**
     * Variable de tipo <code>Image</code> que empleada para obtener la imagen
     * de los distintos cursores.
     */
    private final Image img;
    /**
     * Variable de tipo <code>Cursor</code> que almacena el cursor de la opción
     * de dibujo libre.
     */
    private final Cursor cursorLapiz;
    /**
     * Variable de tipo <code>Graphics2D</code> que almacena los elementos
     * gráficos del buffer.
     */
    private final Graphics2D graficaBuffer;
    /**
     * Variable de tipo <code>Graphics2D</code> que almacena los elementos
     * gráficos del panel.
     */
    private final Graphics2D graficaPanel;
    /**
     * Variable de tipo <code>ArrayList</code> que almacena todos los elementos
     * gráficos que han sido dibujados.
     */
    private final ArrayList<Herramienta> elementosDibujados;
    /**
     * Variable de tipo <code>Stroke</code> que almacena las características del
     * ancho del trazo seleccionado para dibujar.
     */
    private Stroke anchoTrazoSelec;
    /**
     * Variable de tipo <code>Herramienta</code> que almacena las
     * características del ancho del trazo seleccionado para dibujar.
     */
    private Herramienta herramientaActual;
    float dash[] = {10.f};
    Stroke dis;

    /**
     * Constructor de la ventana.
     */
    public Ventana() {
      this.dis = new BasicStroke(3.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER, 10.0f, dash, 0.0f);

        /* Componentes */
        initComponents();

        /* Variables */
        ancho = panelLienzo.getWidth();
        alto = panelLienzo.getHeight();
        opcion = 4;
        selecCursor = 1;
        actual = 0;

        /* Inicializacion buffer */
        bufferPanel = (BufferedImage) panelLienzo.createImage(ancho, alto);
        vacio = copiarBuffer(bufferPanel);
        Graphics2D g3 = bufferPanel.createGraphics();
        g3.setColor(Color.white);
        g3.fillRect(0, 0, ancho, alto);
        graficaPanel = (Graphics2D) panelLienzo.getGraphics();
        graficaBuffer = (Graphics2D) bufferPanel.getGraphics();


        /* Iniciacilazion color */
        colorTrazoSelec = new Color(Color.BLACK.getRGB());

        /* Cursores */
        img = Toolkit.getDefaultToolkit().createImage("src/icons/lapiz.png");
        cursorLapiz = Toolkit.getDefaultToolkit().createCustomCursor(img, new Point(3, 26), "img");

        /* Primer buffer vacio */
        elementosDibujados = new ArrayList<>();
        anchoTrazoSelec = new BasicStroke(anchoTrazo.getValue());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogColores = new javax.swing.JDialog();
        jColorChooser1 = new javax.swing.JColorChooser();
        botonColoresAceptar = new javax.swing.JButton();
        botonColoresCancelar = new javax.swing.JButton();
        dialogFichero = new javax.swing.JDialog();
        selectorFicheros = new javax.swing.JFileChooser();
        dialogTexto = new javax.swing.JDialog();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        dialogParche = new javax.swing.JDialog();
        botonCirculo = new javax.swing.JButton();
        botonCuadrado = new javax.swing.JButton();
        botonLinea = new javax.swing.JButton();
        botonLapiz = new javax.swing.JButton();
        botonElipse = new javax.swing.JButton();
        botonRectangulo = new javax.swing.JButton();
        panelLienzo = new javax.swing.JPanel();
        anchoTrazo = new javax.swing.JSlider();
        botonPaletaColores = new javax.swing.JButton();
        botonRehacer = new javax.swing.JButton();
        botonDeshacer = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        botonAbrir = new javax.swing.JButton();
        botonTexto = new javax.swing.JButton();
        botonBorrar = new javax.swing.JButton();
        botonNuevo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        menuSuperior = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuArchivoNuevo = new javax.swing.JMenuItem();
        menuArchivoAbrir = new javax.swing.JMenuItem();
        menuArchivoGuardar = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        menuEditarDeshacer = new javax.swing.JMenuItem();
        menuEditarRehacer = new javax.swing.JMenuItem();
        separador3 = new javax.swing.JPopupMenu.Separator();
        menuEditarColores = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        menuAyudaParche = new javax.swing.JMenuItem();
        separador4 = new javax.swing.JPopupMenu.Separator();
        menuAyudaAcercaDe = new javax.swing.JMenuItem();

        dialogColores.setMinimumSize(new java.awt.Dimension(710, 450));
        dialogColores.setResizable(false);

        botonColoresAceptar.setText("Aceptar");
        botonColoresAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonColoresAceptarMousePressed(evt);
            }
        });

        botonColoresCancelar.setText("Cancelar");
        botonColoresCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonColoresCancelarMousePressed(evt);
            }
        });

        javax.swing.GroupLayout dialogColoresLayout = new javax.swing.GroupLayout(dialogColores.getContentPane());
        dialogColores.getContentPane().setLayout(dialogColoresLayout);
        dialogColoresLayout.setHorizontalGroup(
            dialogColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogColoresLayout.createSequentialGroup()
                .addGroup(dialogColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogColoresLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dialogColoresLayout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(botonColoresAceptar)
                        .addGap(18, 18, 18)
                        .addComponent(botonColoresCancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogColoresLayout.setVerticalGroup(
            dialogColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogColoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialogColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonColoresAceptar)
                    .addComponent(botonColoresCancelar))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialogFicheroLayout = new javax.swing.GroupLayout(dialogFichero.getContentPane());
        dialogFichero.getContentPane().setLayout(dialogFicheroLayout);
        dialogFicheroLayout.setHorizontalGroup(
            dialogFicheroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogFicheroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectorFicheros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        dialogFicheroLayout.setVerticalGroup(
            dialogFicheroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogFicheroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectorFicheros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dialogTexto.setMinimumSize(new java.awt.Dimension(224, 140));
        dialogTexto.setResizable(false);

        jTextField1.setToolTipText("Introduzca texto");

        jButton1.setText("Aceptar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });

        jButton2.setText("Cancelar");

        javax.swing.GroupLayout dialogTextoLayout = new javax.swing.GroupLayout(dialogTexto.getContentPane());
        dialogTexto.getContentPane().setLayout(dialogTextoLayout);
        dialogTextoLayout.setHorizontalGroup(
            dialogTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogTextoLayout.createSequentialGroup()
                .addGroup(dialogTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogTextoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(dialogTextoLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogTextoLayout.setVerticalGroup(
            dialogTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogTextoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(dialogTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout dialogParcheLayout = new javax.swing.GroupLayout(dialogParche.getContentPane());
        dialogParche.getContentPane().setLayout(dialogParcheLayout);
        dialogParcheLayout.setHorizontalGroup(
            dialogParcheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        dialogParcheLayout.setVerticalGroup(
            dialogParcheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Paint v0.3");
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        botonCirculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/circulo.png"))); // NOI18N
        botonCirculo.setToolTipText("Círculo");
        botonCirculo.setMaximumSize(new java.awt.Dimension(64, 64));
        botonCirculo.setMinimumSize(new java.awt.Dimension(64, 64));
        botonCirculo.setPreferredSize(new java.awt.Dimension(64, 64));
        botonCirculo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonCirculoMousePressed(evt);
            }
        });

        botonCuadrado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cuadrado.png"))); // NOI18N
        botonCuadrado.setToolTipText("Cuadrado");
        botonCuadrado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonCuadradoMousePressed(evt);
            }
        });

        botonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/linea.png"))); // NOI18N
        botonLinea.setToolTipText("Línea");
        botonLinea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonLineaMousePressed(evt);
            }
        });

        botonLapiz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lapiz.png"))); // NOI18N
        botonLapiz.setToolTipText("Estilo libre");
        botonLapiz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonLapizMousePressed(evt);
            }
        });

        botonElipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/elipse.png"))); // NOI18N
        botonElipse.setToolTipText("Elipse");
        botonElipse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonElipseMousePressed(evt);
            }
        });

        botonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rectangulo.png"))); // NOI18N
        botonRectangulo.setToolTipText("Rectángulo");
        botonRectangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonRectanguloMousePressed(evt);
            }
        });

        panelLienzo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                panelLienzoMouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelLienzoMouseDragged(evt);
            }
        });
        panelLienzo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelLienzoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panelLienzoMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelLienzoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelLienzoMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout panelLienzoLayout = new javax.swing.GroupLayout(panelLienzo);
        panelLienzo.setLayout(panelLienzoLayout);
        panelLienzoLayout.setHorizontalGroup(
            panelLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 861, Short.MAX_VALUE)
        );
        panelLienzoLayout.setVerticalGroup(
            panelLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 580, Short.MAX_VALUE)
        );

        anchoTrazo.setMaximum(5);
        anchoTrazo.setMinimum(1);
        anchoTrazo.setPaintLabels(true);
        anchoTrazo.setValue(1);
        anchoTrazo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                anchoTrazoMouseDragged(evt);
            }
        });

        botonPaletaColores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/colores.png"))); // NOI18N
        botonPaletaColores.setToolTipText("Color trazo");
        botonPaletaColores.setMaximumSize(new java.awt.Dimension(40, 40));
        botonPaletaColores.setMinimumSize(new java.awt.Dimension(40, 40));
        botonPaletaColores.setPreferredSize(new java.awt.Dimension(40, 40));
        botonPaletaColores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonPaletaColoresMousePressed(evt);
            }
        });

        botonRehacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rehacer.png"))); // NOI18N
        botonRehacer.setToolTipText("Rehacer");
        botonRehacer.setEnabled(false);
        botonRehacer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonRehacerMousePressed(evt);
            }
        });

        botonDeshacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/deshacer.png"))); // NOI18N
        botonDeshacer.setToolTipText("Deshacer");
        botonDeshacer.setEnabled(false);
        botonDeshacer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonDeshacerMousePressed(evt);
            }
        });

        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/guardar.png"))); // NOI18N
        botonGuardar.setToolTipText("Guardar");
        botonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonGuardarMousePressed(evt);
            }
        });

        botonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrir.png"))); // NOI18N
        botonAbrir.setToolTipText("Abrir");
        botonAbrir.setFocusPainted(false);
        botonAbrir.setMaximumSize(new java.awt.Dimension(40, 40));
        botonAbrir.setMinimumSize(new java.awt.Dimension(40, 40));
        botonAbrir.setPreferredSize(new java.awt.Dimension(40, 40));
        botonAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonAbrirMousePressed(evt);
            }
        });

        botonTexto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/letra.png"))); // NOI18N
        botonTexto.setToolTipText("Texto");
        botonTexto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonTextoMousePressed(evt);
            }
        });

        botonBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/borrar.png"))); // NOI18N
        botonBorrar.setToolTipText("Goma de borrar");
        botonBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonBorrarMousePressed(evt);
            }
        });

        botonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/nuevo.png"))); // NOI18N
        botonNuevo.setToolTipText("Nuevo");
        botonNuevo.setEnabled(false);

        jLabel1.setText("X:000, Y:000");

        jButton3.setText("dis");

        jButton4.setToolTipText("Color relleno");
        jButton4.setSize(new java.awt.Dimension(40, 40));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton4MousePressed(evt);
            }
        });

        menuArchivo.setText("Archivo");

        menuArchivoNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/nuevo.png"))); // NOI18N
        menuArchivoNuevo.setText("Nuevo");
        menuArchivoNuevo.setEnabled(false);
        menuArchivo.add(menuArchivoNuevo);

        menuArchivoAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrir.png"))); // NOI18N
        menuArchivoAbrir.setText("Abrir");
        menuArchivoAbrir.setToolTipText("");
        menuArchivoAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuArchivoAbrirMousePressed(evt);
            }
        });
        menuArchivo.add(menuArchivoAbrir);

        menuArchivoGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/guardar.png"))); // NOI18N
        menuArchivoGuardar.setText("Guardar");
        menuArchivoGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuArchivoGuardarMousePressed(evt);
            }
        });
        menuArchivo.add(menuArchivoGuardar);

        menuSuperior.add(menuArchivo);
        menuArchivo.getAccessibleContext().setAccessibleName("");

        menuEditar.setText("Editar");

        menuEditarDeshacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/deshacer.png"))); // NOI18N
        menuEditarDeshacer.setText("Deshacer");
        menuEditarDeshacer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuEditarDeshacerMousePressed(evt);
            }
        });
        menuEditar.add(menuEditarDeshacer);

        menuEditarRehacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rehacer.png"))); // NOI18N
        menuEditarRehacer.setText("Rehacer");
        menuEditarRehacer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuEditarRehacerMousePressed(evt);
            }
        });
        menuEditar.add(menuEditarRehacer);
        menuEditar.add(separador3);

        menuEditarColores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/colores.png"))); // NOI18N
        menuEditarColores.setText("Colores");
        menuEditarColores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuEditarColoresMousePressed(evt);
            }
        });
        menuEditar.add(menuEditarColores);

        menuSuperior.add(menuEditar);

        menuAyuda.setText("Ayuda");

        menuAyudaParche.setText("Notas del parche");
        menuAyudaParche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuAyudaParcheMousePressed(evt);
            }
        });
        menuAyuda.add(menuAyudaParche);
        menuAyuda.add(separador4);

        menuAyudaAcercaDe.setText("Acerca de");
        menuAyuda.add(menuAyudaAcercaDe);

        menuSuperior.add(menuAyuda);

        setJMenuBar(menuSuperior);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonElipse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonRectangulo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonDeshacer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonRehacer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonCirculo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonCuadrado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonLinea, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonLapiz, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(anchoTrazo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botonAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botonPaletaColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(panelLienzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelLienzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botonRehacer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonDeshacer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonCirculo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonCuadrado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonElipse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonRectangulo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonLinea, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonLapiz, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(anchoTrazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonPaletaColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Método que controla el evento de click de ratón sobre el lienzo, aquí se
     * crearán las nuevas figuras.
     *
     * @param evt Indica la posición actual de ratón.
     */
    private void panelLienzoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMousePressed
        
        botonRehacer.setEnabled(false);
        for (int i = elementosDibujados.size() - 1; i >= actual; i--) {
            elementosDibujados.remove(i);
        }
        botonDeshacer.setEnabled(true);
        this.pintarPressed(evt);
    }//GEN-LAST:event_panelLienzoMousePressed
    /**
     * Método que controla el evento de arrastrado del ratón sobre el lienzo.
     *
     * @param evt Indica la posición actual de ratón.
     */
    private void panelLienzoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseDragged
        this.pintarDragged(evt);
    }//GEN-LAST:event_panelLienzoMouseDragged
    /**
     * Método que controla el evento de arrastrado del ratón sobre el lienzo.
     *
     * @param evt Indica la posición actual de ratón.
     */
    private void panelLienzoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseReleased
       //this.pintarReleased(evt);
        //vuelco en el lienzo

        elementosDibujados.add(herramientaActual);
        actual++;

        this.pintarTodosElementos();
        graficaPanel.drawImage(bufferPanel, 0, 0, null);
    }//GEN-LAST:event_panelLienzoMouseReleased
    /**
     *
     */
    private void botonElipseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonElipseMousePressed
        opcion = 5;
        selecCursor = 0;
    }//GEN-LAST:event_botonElipseMousePressed
    /**
     *
     */
    private void botonCirculoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCirculoMousePressed
        opcion = 1;
        selecCursor = 0;
    }//GEN-LAST:event_botonCirculoMousePressed
    /**
     *
     */
    private void botonCuadradoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCuadradoMousePressed
        opcion = 2;
        selecCursor = 0;
    }//GEN-LAST:event_botonCuadradoMousePressed
    /**
     *
     */
    private void botonLineaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLineaMousePressed
        opcion = 3;
        selecCursor = 0;
    }//GEN-LAST:event_botonLineaMousePressed
    /**
     *
     */
    private void botonLapizMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLapizMousePressed
        opcion = 4;
        selecCursor = 1;
    }//GEN-LAST:event_botonLapizMousePressed
    /**
     *
     */
    private void botonRectanguloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRectanguloMousePressed
        opcion = 6;
        selecCursor = 0;
    }//GEN-LAST:event_botonRectanguloMousePressed
    /**
     *
     */
    private void botonPaletaColoresMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonPaletaColoresMousePressed
        dialogColores.setVisible(true);
        botonPaletaColores.setEnabled(false);
    }//GEN-LAST:event_botonPaletaColoresMousePressed
    /**
     *
     */
    private void anchoTrazoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_anchoTrazoMouseDragged
        this.anchoTrazoSelec = new BasicStroke(anchoTrazo.getValue());

    }//GEN-LAST:event_anchoTrazoMouseDragged
    /**
     *
     */
    private void botonColoresCancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColoresCancelarMousePressed
        dialogColores.setVisible(false);
    }//GEN-LAST:event_botonColoresCancelarMousePressed
    /**
     *
     */
    private void panelLienzoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseEntered
        jLabel1.setVisible(true);
        if (selecCursor == 1) {
            setCursor(cursorLapiz);
        }
        if (selecCursor == 0) {
            setCursor(Cursor.CROSSHAIR_CURSOR);
        }
    }//GEN-LAST:event_panelLienzoMouseEntered
    /**
     *
     */
    private void panelLienzoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseExited
        setCursor(Cursor.DEFAULT_CURSOR);
        jLabel1.setVisible(false);
    }//GEN-LAST:event_panelLienzoMouseExited
    /**
     *
     */
    private void botonColoresAceptarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColoresAceptarMousePressed
        if (!botonPaletaColores.isEnabled()) {
            colorTrazoSelec = jColorChooser1.getColor();
            graficaPanel.setPaint(colorTrazoSelec);
            graficaBuffer.setPaint(colorTrazoSelec);
            botonPaletaColores.setBackground(jColorChooser1.getColor());
            botonPaletaColores.setEnabled(true);
        }
        if (!jButton4.isEnabled()) {
            colorRellenoSelec = jColorChooser1.getColor();
            jButton4.setBackground(jColorChooser1.getColor());
            jButton4.setEnabled(true);
        }
        dialogColores.setVisible(false);
    }//GEN-LAST:event_botonColoresAceptarMousePressed
    /**
     *
     */
    private void botonGuardarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonGuardarMousePressed
        this.guardarArchivo();
    }//GEN-LAST:event_botonGuardarMousePressed
    /**
     *
     */
    private void botonAbrirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAbrirMousePressed
        this.abrirArchivo();
    }//GEN-LAST:event_botonAbrirMousePressed
    /**
     *
     */
    private void botonBorrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonBorrarMousePressed
        opcion = 8;
        selecCursor = 0;
    }//GEN-LAST:event_botonBorrarMousePressed
    /**
     *
     */
    private void menuAyudaParcheMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAyudaParcheMousePressed
        // dialogParche.setVisible(true);
    }//GEN-LAST:event_menuAyudaParcheMousePressed
    /**
     *
     */
    private void botonDeshacerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonDeshacerMousePressed
        if (botonDeshacer.isEnabled()) {
            this.deshacer();
        }
    }//GEN-LAST:event_botonDeshacerMousePressed
    /**
     *
     */
    private void botonRehacerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRehacerMousePressed
        if (botonRehacer.isEnabled()) {
            this.rehacer();
        }
    }//GEN-LAST:event_botonRehacerMousePressed
    /**
     *
     */
    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        herramientaActual = new DibujarTexto(jTextField1.getText(), this.colorTrazoSelec, this.anchoTrazoSelec);
        dialogTexto.setVisible(false);
    }//GEN-LAST:event_jButton1MousePressed
    /**
     *
     */
    private void botonTextoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonTextoMousePressed
        opcion = 7;
        dialogTexto.setVisible(true);
    }//GEN-LAST:event_botonTextoMousePressed
    /**
     *
     */
    private void panelLienzoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseMoved
        graficaPanel.drawImage(bufferPanel, 0, 0, null);
        jLabel1.setText("X: " + evt.getX() + " Y: " + evt.getY());
        if (opcion == 7 && !dialogTexto.isVisible()) {
            herramientaActual.reposicionar(evt, graficaPanel);
        }
    }//GEN-LAST:event_panelLienzoMouseMoved
    /**
     *
     */
    private void menuEditarColoresMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditarColoresMousePressed
        dialogColores.setVisible(true);
    }//GEN-LAST:event_menuEditarColoresMousePressed
    /**
     *
     */
    private void menuEditarDeshacerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditarDeshacerMousePressed
        this.deshacer();
    }//GEN-LAST:event_menuEditarDeshacerMousePressed
    /**
     *
     */
    private void menuEditarRehacerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditarRehacerMousePressed
        this.rehacer();
    }//GEN-LAST:event_menuEditarRehacerMousePressed
    /**
     *
     */
    private void menuArchivoAbrirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuArchivoAbrirMousePressed
        this.abrirArchivo();
    }//GEN-LAST:event_menuArchivoAbrirMousePressed
    /**
     *
     */
    private void menuArchivoGuardarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuArchivoGuardarMousePressed
        this.guardarArchivo();
    }//GEN-LAST:event_menuArchivoGuardarMousePressed

    private void jButton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MousePressed
        dialogColores.setVisible(true);
        jButton4.setEnabled(false);

    }//GEN-LAST:event_jButton4MousePressed

    @Override
    public void paint(Graphics g) {
        super.paintComponents(g);
        graficaPanel.drawImage(bufferPanel, 0, 0, null);
    }

    /**
     * @param args the command line arguments.
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider anchoTrazo;
    private javax.swing.JButton botonAbrir;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonCirculo;
    private javax.swing.JButton botonColoresAceptar;
    private javax.swing.JButton botonColoresCancelar;
    private javax.swing.JButton botonCuadrado;
    private javax.swing.JButton botonDeshacer;
    private javax.swing.JButton botonElipse;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonLapiz;
    private javax.swing.JButton botonLinea;
    private javax.swing.JButton botonNuevo;
    private javax.swing.JButton botonPaletaColores;
    private javax.swing.JButton botonRectangulo;
    private javax.swing.JButton botonRehacer;
    private javax.swing.JButton botonTexto;
    private javax.swing.JDialog dialogColores;
    private javax.swing.JDialog dialogFichero;
    private javax.swing.JDialog dialogParche;
    private javax.swing.JDialog dialogTexto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuItem menuArchivoAbrir;
    private javax.swing.JMenuItem menuArchivoGuardar;
    private javax.swing.JMenuItem menuArchivoNuevo;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuItem menuAyudaAcercaDe;
    private javax.swing.JMenuItem menuAyudaParche;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenuItem menuEditarColores;
    private javax.swing.JMenuItem menuEditarDeshacer;
    private javax.swing.JMenuItem menuEditarRehacer;
    private javax.swing.JMenuBar menuSuperior;
    private javax.swing.JPanel panelLienzo;
    private javax.swing.JFileChooser selectorFicheros;
    private javax.swing.JPopupMenu.Separator separador3;
    private javax.swing.JPopupMenu.Separator separador4;
    // End of variables declaration//GEN-END:variables

    /**
     * Método para copiar un Buffer
     *
     * @param buffer sdfsdfsdf
     * @return Devuelve un objeto BufferedImage que es una copia del buffer
     * entregado
     */
    private BufferedImage copiarBuffer(BufferedImage buffer) {
        ColorModel cm = buffer.getColorModel();
        boolean isAlphaPremultiplied = cm.isAlphaPremultiplied();
        WritableRaster raster = buffer.copyData(null);
        return new BufferedImage(cm, raster, isAlphaPremultiplied, null);
    }

    /**
     *
     */
    public void deshacer() {
        graficaBuffer.setColor(Color.white);
        graficaBuffer.fillRect(0, 0, panelLienzo.getWidth(), panelLienzo.getHeight());
        graficaBuffer.setColor(colorTrazoSelec);
        this.pintarElemenosMenosUno();
    }

    /**
     *
     */
    public void rehacer() {
        graficaBuffer.setColor(Color.white);
        graficaBuffer.fillRect(0, 0, panelLienzo.getWidth(), panelLienzo.getHeight());
        graficaBuffer.setColor(colorTrazoSelec);
        this.pintarElemenosMasUno();
    }

    /**
     *
     */
    public void abrirArchivo() {
        int seleccion = selectorFicheros.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = selectorFicheros.getSelectedFile();
            try {
                BufferedImage imagen = ImageIO.read(fichero);
                graficaBuffer.drawImage(imagen, 0, 0, null);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    /**
     *
     */
    public void guardarArchivo() {
        int seleccion = selectorFicheros.showSaveDialog(this);
        selectorFicheros.addChoosableFileFilter(new FileNameExtensionFilter("Images", "jpg", "png", "gif", "bmp"));
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            // File fichero = selectorFicheros.getSelectedFile();
            try {
                ImageIO.write(bufferPanel, "png", selectorFicheros.getSelectedFile());
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     *
     * @param evt
     */
    public void pintarPressed(java.awt.event.MouseEvent evt) {
        switch (opcion) {
            /* Círculo */
            case 1:
                herramientaActual = new Circulo(this.colorTrazoSelec, this.anchoTrazoSelec, this.colorRellenoSelec);
                break;
            /* Cuadrado */
            case 2:
                herramientaActual = new Cuadrado(this.colorTrazoSelec, this.anchoTrazoSelec);
                break;
            /* Línea */
            case 3:
                herramientaActual = new Linea(this.colorTrazoSelec, this.anchoTrazoSelec);
                break;
            /* Libre */
            case 4:
                herramientaActual = new DibujoLibre(this.colorTrazoSelec, this.anchoTrazoSelec);
                break;
            /* Elipse */
            case 5:
                herramientaActual = new Elipse(this.colorTrazoSelec, this.anchoTrazoSelec, this.colorRellenoSelec);
                break;
            /* Rectangulo */
            case 6:
                herramientaActual = new Rectangulo(this.colorTrazoSelec, this.anchoTrazoSelec);
                break;
            /* Texto */
            case 7:
                herramientaActual.pintar(graficaPanel);
                opcion = 0;
                break;
            /* Borrar */
            case 8:
                herramientaActual = new Borrar(this.anchoTrazoSelec);
                break;
        }
        herramientaActual.iniciar(evt);
    }

    /**
     *
     * @param evt
     */
    public void pintarDragged(java.awt.event.MouseEvent evt) {
        graficaPanel.drawImage(bufferPanel, 0, 0, null);
        if (opcion == 4 || opcion == 8) {
            herramientaActual.reposicionar(evt, graficaBuffer);
        } else if (opcion != 7) {
            herramientaActual.reposicionar(evt, graficaPanel);
        }
    }

    public void pintarReleased(java.awt.event.MouseEvent evt) {
        if (opcion != 7) {
            herramientaActual.pintar(graficaBuffer);
        }
    }

    /**
     *
     */
    public void pintarTodosElementos() {
        for (int i = 0; i < elementosDibujados.size(); i++) {
            elementosDibujados.get(i).pintar(graficaBuffer);
        }

    }

    /**
     *
     */
    public void pintarElemenosMenosUno() {
        int elemActual = actual - 1;
        for (int i = 0; i < elemActual; i++) {
            if (elementosDibujados.get(i) instanceof DibujoLibre) {
                elementosDibujados.get(i).pintar(graficaBuffer);
            } else {

                elementosDibujados.get(i).pintar(graficaBuffer);
            }
        }
        graficaPanel.drawImage(bufferPanel, 0, 0, null);
        actual--;
        if (elemActual == 0) {
            botonDeshacer.setEnabled(false);
        }
        botonRehacer.setEnabled(true);
    }

    /**
     *
     */
    public void pintarElemenosMasUno() {
        int elemActual = actual + 1;
        for (int i = 0; i < elemActual; i++) {
            if (elementosDibujados.get(i) instanceof DibujoLibre) {
                elementosDibujados.get(i).pintar(graficaBuffer);
            } else {

                elementosDibujados.get(i).pintar(graficaBuffer);
            }
        }
        graficaPanel.drawImage(bufferPanel, 0, 0, null);
        actual++;
        if (elemActual == elementosDibujados.size()) {
            botonRehacer.setEnabled(false);
        }
    }
}
