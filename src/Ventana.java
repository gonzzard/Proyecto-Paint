
import formas.Circulo;
import formas.Cuadrado;
import formas.Elipse;
import formas.Linea;
import formas.Rectangulo;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.Ellipse2D;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;
import static java.lang.Math.pow;
import static java.lang.Math.sqrt;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * @author Gonzalo de las Heras
 * @version v0.3
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Objeto de tipo <code>BufferImage</code> que almacena el buffer.
     */
    private BufferedImage bufferActual;
    /**
     *
     */
    Elipse elipse;
    /**
     *
     */
    Circulo circulo;
    /**
     *
     */
    Rectangulo rectangulo;
    /**
     *
     */
    Cuadrado cuadrado;
    /**
     *
     */
    Linea linea;
    /**
     * Objeto genérico de tipo <code>Color</code> que se empleará para almacenar
     * el color seleccionado para el trazo.
     */
    private Color colorSeleccionado;
    /**
     * Variable de tipo <code>int</code> que almacena el valor de la opcioón de
     * dibujado que está seleccionada
     *
     * -Opcion 1: Circulo<br> Opcion 2: Cuadrado<br> Opcion 3: Linea<br> Opcion
     * 4: Libre<br> -Opcion 5: Elipse<br> -Opcion 6: Rectangulo.
     */
    private int opcion;
    /**
     *
     */
    private int x1;
    /**
     *
     */
    private int x2;
    /**
     *
     */
    private int y1;
    /**
     *
     */
    private int y2;
    /**
     *
     */
    private int alto;
    /**
     *
     */
    private int ancho;
    /**
     *
     */
    private int selecCursor;
    /**
     *
     */
    private int actual;
    /**
     *
     */
    private Image img;
    /**
     *
     */
    private Cursor cursorLapiz;
    /**
     *
     */
    private Graphics2D g4;
    /**
     *
     */
    private Graphics2D g2;
    /**
     *
     */
    private ArrayList<BufferedImage> buffers;

    /**
     * Constructor de la ventana
     */
    public Ventana() {

        // Componentes
        initComponents();

        // Formas
        elipse = new Elipse();
        circulo = new Circulo();
        rectangulo = new Rectangulo();
        cuadrado = new Cuadrado();
        linea = new Linea();

        // Variables
        ancho = panelLienzo.getWidth();
        alto = panelLienzo.getHeight();
        opcion = 4;
        selecCursor = 1;
        actual = 0;

        // Inicializacion buffer
        bufferActual = (BufferedImage) panelLienzo.createImage(ancho, alto);

        Graphics2D g3 = bufferActual.createGraphics();
        g3.setColor(Color.white);
        g3.fillRect(0, 0, ancho, alto);
        g2 = (Graphics2D) panelLienzo.getGraphics();
        //g4 = (Graphics2D) buffer.getGraphics();
        g4 = (Graphics2D) bufferActual.getGraphics();
        // Inicializaion formas

        // Iniciacilazion color
        colorSeleccionado = new Color(Color.BLACK.getRGB());

        // Cursor
        img = Toolkit.getDefaultToolkit().createImage("src/icons/lapiz.png");
        cursorLapiz = Toolkit.getDefaultToolkit().createCustomCursor(img, new Point(3, 26), "img");
// primer buffer vacio
        buffers = new ArrayList<BufferedImage>();
        buffers.add(copiarBuffer(bufferActual));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogColores = new javax.swing.JDialog();
        jColorChooser1 = new javax.swing.JColorChooser();
        botonColoresAceptar = new javax.swing.JButton();
        botonColoresCancelar = new javax.swing.JButton();
        dialogFichero = new javax.swing.JDialog();
        selectorFicheros = new javax.swing.JFileChooser();
        panelLienzo = new javax.swing.JPanel();
        botonCirculo = new javax.swing.JButton();
        botonCuadrado = new javax.swing.JButton();
        botonLinea = new javax.swing.JButton();
        botonLapiz = new javax.swing.JButton();
        botonElipse = new javax.swing.JButton();
        botonRectangulo = new javax.swing.JButton();
        anchoTrazo = new javax.swing.JSlider();
        botonPaletaColores = new javax.swing.JButton();
        botonRehacer = new javax.swing.JButton();
        botonDeshacer = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        botonAbrir = new javax.swing.JButton();
        separador1 = new javax.swing.JSeparator();
        botonTexto = new javax.swing.JButton();
        separador2 = new javax.swing.JSeparator();
        botonBorrar = new javax.swing.JButton();
        botonNuevo = new javax.swing.JButton();
        menuSuperior = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuArchivoNuevo = new javax.swing.JMenuItem();
        menuArchivoAbrir = new javax.swing.JMenuItem();
        menuArchivoGuardar = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        menuEditarDeshacer = new javax.swing.JMenuItem();
        menuEditarRehacer = new javax.swing.JMenuItem();
        separador3 = new javax.swing.JPopupMenu.Separator();
        menuEditarColores = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        menuAyudaParche = new javax.swing.JMenuItem();
        separador4 = new javax.swing.JPopupMenu.Separator();
        menuAyudaAcercaDe = new javax.swing.JMenuItem();

        dialogColores.setMinimumSize(new java.awt.Dimension(710, 450));
        dialogColores.setResizable(false);

        botonColoresAceptar.setText("Aceptar");
        botonColoresAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonColoresAceptarMousePressed(evt);
            }
        });

        botonColoresCancelar.setText("Cancelar");
        botonColoresCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonColoresCancelarMousePressed(evt);
            }
        });

        javax.swing.GroupLayout dialogColoresLayout = new javax.swing.GroupLayout(dialogColores.getContentPane());
        dialogColores.getContentPane().setLayout(dialogColoresLayout);
        dialogColoresLayout.setHorizontalGroup(
            dialogColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogColoresLayout.createSequentialGroup()
                .addGroup(dialogColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogColoresLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dialogColoresLayout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(botonColoresAceptar)
                        .addGap(18, 18, 18)
                        .addComponent(botonColoresCancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogColoresLayout.setVerticalGroup(
            dialogColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogColoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialogColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonColoresAceptar)
                    .addComponent(botonColoresCancelar))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialogFicheroLayout = new javax.swing.GroupLayout(dialogFichero.getContentPane());
        dialogFichero.getContentPane().setLayout(dialogFicheroLayout);
        dialogFicheroLayout.setHorizontalGroup(
            dialogFicheroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogFicheroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectorFicheros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        dialogFicheroLayout.setVerticalGroup(
            dialogFicheroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogFicheroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectorFicheros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Paint v0.3");
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        panelLienzo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelLienzoMouseDragged(evt);
            }
        });
        panelLienzo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelLienzoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelLienzoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelLienzoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panelLienzoMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panelLienzoLayout = new javax.swing.GroupLayout(panelLienzo);
        panelLienzo.setLayout(panelLienzoLayout);
        panelLienzoLayout.setHorizontalGroup(
            panelLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 980, Short.MAX_VALUE)
        );
        panelLienzoLayout.setVerticalGroup(
            panelLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 564, Short.MAX_VALUE)
        );

        botonCirculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/circulo.png"))); // NOI18N
        botonCirculo.setToolTipText("Círculo");
        botonCirculo.setMaximumSize(new java.awt.Dimension(64, 64));
        botonCirculo.setMinimumSize(new java.awt.Dimension(64, 64));
        botonCirculo.setPreferredSize(new java.awt.Dimension(64, 64));
        botonCirculo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonCirculoMousePressed(evt);
            }
        });

        botonCuadrado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cuadrado.png"))); // NOI18N
        botonCuadrado.setToolTipText("Cuadrado");
        botonCuadrado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonCuadradoMousePressed(evt);
            }
        });

        botonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/linea.png"))); // NOI18N
        botonLinea.setToolTipText("Línea");
        botonLinea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonLineaMousePressed(evt);
            }
        });

        botonLapiz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lapiz.png"))); // NOI18N
        botonLapiz.setToolTipText("Estilo libre");
        botonLapiz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonLapizMousePressed(evt);
            }
        });

        botonElipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/elipse.png"))); // NOI18N
        botonElipse.setToolTipText("Elipse");
        botonElipse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonElipseMousePressed(evt);
            }
        });

        botonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rectangulo.png"))); // NOI18N
        botonRectangulo.setToolTipText("Rectángulo");
        botonRectangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonRectanguloMousePressed(evt);
            }
        });

        anchoTrazo.setMaximum(5);
        anchoTrazo.setMinimum(1);
        anchoTrazo.setPaintLabels(true);
        anchoTrazo.setValue(1);
        anchoTrazo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                anchoTrazoMouseDragged(evt);
            }
        });

        botonPaletaColores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/colores.png"))); // NOI18N
        botonPaletaColores.setToolTipText("Colores");
        botonPaletaColores.setMaximumSize(new java.awt.Dimension(40, 40));
        botonPaletaColores.setMinimumSize(new java.awt.Dimension(40, 40));
        botonPaletaColores.setPreferredSize(new java.awt.Dimension(40, 40));
        botonPaletaColores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonPaletaColoresMousePressed(evt);
            }
        });

        botonRehacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rehacer.png"))); // NOI18N
        botonRehacer.setToolTipText("Rehacer");
        botonRehacer.setEnabled(false);
        botonRehacer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonRehacerMousePressed(evt);
            }
        });

        botonDeshacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/deshacer.png"))); // NOI18N
        botonDeshacer.setToolTipText("Deshacer");
        botonDeshacer.setEnabled(false);
        botonDeshacer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonDeshacerMousePressed(evt);
            }
        });

        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/guardar.png"))); // NOI18N
        botonGuardar.setToolTipText("Guardar");
        botonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonGuardarMousePressed(evt);
            }
        });

        botonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrir.png"))); // NOI18N
        botonAbrir.setToolTipText("Abrir");
        botonAbrir.setFocusPainted(false);
        botonAbrir.setMaximumSize(new java.awt.Dimension(40, 40));
        botonAbrir.setMinimumSize(new java.awt.Dimension(40, 40));
        botonAbrir.setPreferredSize(new java.awt.Dimension(40, 40));
        botonAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonAbrirMousePressed(evt);
            }
        });

        separador1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        botonTexto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/letra.png"))); // NOI18N
        botonTexto.setToolTipText("Texto");

        separador2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        botonBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/borrar.png"))); // NOI18N
        botonBorrar.setToolTipText("Goma de borrar");
        botonBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonBorrarMousePressed(evt);
            }
        });

        botonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/nuevo.png"))); // NOI18N
        botonNuevo.setToolTipText("Nuevo");
        botonNuevo.setEnabled(false);

        menuArchivo.setText("Archivo");

        menuArchivoNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/nuevo.png"))); // NOI18N
        menuArchivoNuevo.setText("Nuevo");
        menuArchivo.add(menuArchivoNuevo);

        menuArchivoAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrir.png"))); // NOI18N
        menuArchivoAbrir.setText("Abrir");
        menuArchivoAbrir.setToolTipText("");
        menuArchivo.add(menuArchivoAbrir);

        menuArchivoGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/guardar.png"))); // NOI18N
        menuArchivoGuardar.setText("Guardar");
        menuArchivo.add(menuArchivoGuardar);

        menuSuperior.add(menuArchivo);
        menuArchivo.getAccessibleContext().setAccessibleName("");

        menuEditar.setText("Editar");

        menuEditarDeshacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/deshacer.png"))); // NOI18N
        menuEditarDeshacer.setText("Deshacer");
        menuEditar.add(menuEditarDeshacer);

        menuEditarRehacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rehacer.png"))); // NOI18N
        menuEditarRehacer.setText("Rehacer");
        menuEditar.add(menuEditarRehacer);
        menuEditar.add(separador3);

        menuEditarColores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/colores.png"))); // NOI18N
        menuEditarColores.setText("Colores");
        menuEditar.add(menuEditarColores);

        menuSuperior.add(menuEditar);

        menuAyuda.setText("Ayuda");

        menuAyudaParche.setText("Notas del parche");
        menuAyudaParche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuAyudaParcheMousePressed(evt);
            }
        });
        menuAyuda.add(menuAyudaParche);
        menuAyuda.add(separador4);

        menuAyudaAcercaDe.setText("Acerca de");
        menuAyuda.add(menuAyudaAcercaDe);

        menuSuperior.add(menuAyuda);

        setJMenuBar(menuSuperior);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(botonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonDeshacer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonRehacer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(separador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonCirculo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonCuadrado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonLinea, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonElipse, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonRectangulo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonLapiz, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(anchoTrazo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(separador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonPaletaColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelLienzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonDeshacer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonRehacer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(separador1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonCirculo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonCuadrado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonLinea, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonElipse, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonRectangulo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonLapiz, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(anchoTrazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(botonPaletaColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelLienzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     *
     */
    private void panelLienzoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMousePressed
        //bufferActual = copiarBuffer(buffers.get(actual)); 
        //g4 = (Graphics2D) bufferActual.getGraphics();
        //g4.drawImage(bufferActual, 0, 0, null);
        System.out.println("ACTUAL: " + actual + " TAM " + buffers.size());
        if (actual != buffers.size() - 1) {
            //bufferActual = copiarBuffer(buffers.get(actual)); 
            //g4 = (Graphics2D) bufferActual.getGraphics();
            //int nums = buffers.size()-1;
            for (int i = buffers.size() - 1; i > actual; i--) {
                buffers.remove(i);
                System.out.println("BORRADO- POS: " + i + "TAMAÑO = " + buffers.size() + 1);
            }
            //bufferActual = copiarBuffer(buffers.get(actual));
            //g4 = (Graphics2D) bufferActual.getGraphics();
            //actual = buffers.size()-1;
            //g4.drawImage(bufferActual, 0, 0, null);
            //buffers.add(copiarBuffer(buffers.get(actual)));      
        }
        // actual++;
        botonDeshacer.setEnabled(true);
        // g4 = (Graphics2D) buffers.get(actual).getGraphics();
        switch (opcion) {
            // Circulo
            case 1:
                circulo.iniciar(evt);
                break;
            // Cuadrado  
            case 2:
                cuadrado.iniciar(evt);
                break;
            // Linea
            case 3:
                linea.iniciar(evt);
                break;
            // Libre
            case 4:
                x1 = evt.getX();
                y1 = evt.getY();
                break;
            // Elipse
            case 5:
                elipse.iniciar(evt);
                break;
            // Rectangulo
            case 6:
                rectangulo.iniciar(evt);
                break;
        }
    }//GEN-LAST:event_panelLienzoMousePressed
    /**
     *
     */
    private void panelLienzoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseDragged
        // pinto en el lienzo el buffer
        //g2.drawImage(buffers.get(actual), 0, 0, null);
        //g4 = (Graphics2D) bufferActual.getGraphics();
        g2.drawImage(bufferActual, 0, 0, null);
        switch (opcion) {
            case 1:
                circulo.reposicionar(evt, g2);
                break;
            case 2:
                cuadrado.reposicionar(evt, g2);
                break;
            case 3:
                linea.reposicionar(evt, g2);
                break;
            case 4:
                x2 = evt.getX();
                y2 = evt.getY();
                if (x1 != x2 || y1 != y2) {
                    g4.drawLine(x1, y1, x2, y2);
                    x1 = x2;
                    y1 = y2;
                }
                break;
            case 5:
                elipse.reposicionar(evt, g2);
                break;
            case 6:
                rectangulo.reposicionar(evt, g2);
        }

    }//GEN-LAST:event_panelLienzoMouseDragged
    /**
     *
     */
    private void panelLienzoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseReleased
        // dibujo en el bufer
        //g4 = (Graphics2D) buffers.get(actual).getGraphics();
        g4 = (Graphics2D) bufferActual.getGraphics();

        //g4 =(Graphics2D) panelLienzo.getGraphics();
        switch (opcion) {
            case 1:
                circulo.pintar(g4);
                break;
            case 2:
                cuadrado.pintar(g4);
                break;
            case 3:
                linea.pintar(g4);
                break;
            case 4:
                g4.drawLine(evt.getX(), evt.getY(), evt.getX(), evt.getY());
                break;
            case 5:
                elipse.pintar(g4);
                break;
            case 6:
                rectangulo.pintar(g4);
                break;
        }
        // actual++;
        //vuelco en el lienzo
        actual++;
        buffers.add(copiarBuffer(bufferActual));
        g2.drawImage(bufferActual, 0, 0, null);
        System.out.println("ADICION- TAMAÑO: " + buffers.size() + "ACTUAL: " + actual);
        System.out.println("=======================");
//buffers.add(actual, buffer); 
        //     g4.drawImage(buffers.get(actual), 0, 0, null);

    }//GEN-LAST:event_panelLienzoMouseReleased
    /**
     *
     */
    private void botonElipseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonElipseMousePressed
        opcion = 5;
        selecCursor = 0;
    }//GEN-LAST:event_botonElipseMousePressed
    /**
     *
     */
    private void botonCirculoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCirculoMousePressed
        opcion = 1;
        selecCursor = 0;
    }//GEN-LAST:event_botonCirculoMousePressed
    /**
     *
     */
    private void botonCuadradoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCuadradoMousePressed
        opcion = 2;
        selecCursor = 0;
    }//GEN-LAST:event_botonCuadradoMousePressed
    /**
     *
     */
    private void botonLineaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLineaMousePressed
        opcion = 3;
        selecCursor = 0;
    }//GEN-LAST:event_botonLineaMousePressed
    /**
     *
     */
    private void botonLapizMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLapizMousePressed
        opcion = 4;
        selecCursor = 1;
    }//GEN-LAST:event_botonLapizMousePressed
    /**
     *
     */
    private void botonRectanguloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRectanguloMousePressed
        opcion = 6;
        selecCursor = 0;
    }//GEN-LAST:event_botonRectanguloMousePressed
    /**
     *
     */
    private void botonPaletaColoresMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonPaletaColoresMousePressed
        dialogColores.setVisible(true);
    }//GEN-LAST:event_botonPaletaColoresMousePressed
    /**
     *
     */
    private void anchoTrazoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_anchoTrazoMouseDragged
        g4.setStroke(new BasicStroke(anchoTrazo.getValue()));
        g2.setStroke(new BasicStroke(anchoTrazo.getValue()));
    }//GEN-LAST:event_anchoTrazoMouseDragged
    /**
     *
     */
    private void botonColoresCancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColoresCancelarMousePressed
        dialogColores.setVisible(false);
    }//GEN-LAST:event_botonColoresCancelarMousePressed
    /**
     *
     */
    private void panelLienzoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseEntered
        if (selecCursor == 1) {
            setCursor(cursorLapiz);
        }
        if (selecCursor == 0) {
            setCursor(Cursor.CROSSHAIR_CURSOR);
        }
    }//GEN-LAST:event_panelLienzoMouseEntered
    /**
     *
     */
    private void panelLienzoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseExited
        setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_panelLienzoMouseExited
    /**
     *
     */
    private void botonColoresAceptarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColoresAceptarMousePressed
        colorSeleccionado = jColorChooser1.getColor();
        g2.setPaint(colorSeleccionado);
        g4.setPaint(colorSeleccionado);
        dialogColores.setVisible(false);
    }//GEN-LAST:event_botonColoresAceptarMousePressed
    /**
     *
     */
    private void botonGuardarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonGuardarMousePressed
        int seleccion = selectorFicheros.showSaveDialog(this);
        selectorFicheros.addChoosableFileFilter(new FileNameExtensionFilter("Images", "jpg", "png", "gif", "bmp"));
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = selectorFicheros.getSelectedFile();
            try {
                ImageIO.write(buffers.get(buffers.size() - 1), "png", selectorFicheros.getSelectedFile());
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_botonGuardarMousePressed
    /**
     *
     */
    private void botonAbrirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAbrirMousePressed
        int seleccion = selectorFicheros.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = selectorFicheros.getSelectedFile();
            try {
                BufferedImage imagen = ImageIO.read(fichero);
                g4.drawImage(imagen, 0, 0, null);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_botonAbrirMousePressed
    /**
     *
     */
    private void botonBorrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonBorrarMousePressed

    }//GEN-LAST:event_botonBorrarMousePressed
    /**
     *
     */
    private void menuAyudaParcheMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAyudaParcheMousePressed
       // dialogParche.setVisible(true);
    }//GEN-LAST:event_menuAyudaParcheMousePressed
    /**
     *
     */
    private void botonDeshacerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonDeshacerMousePressed
        if (actual > 0) {
            actual--;
            bufferActual = copiarBuffer(buffers.get(actual));
            //g4 = (Graphics2D) bufferActual.getGraphics();
            //g4.drawImage(bufferActual, 0, 0, null);
            g2.drawImage(bufferActual, 0, 0, null);
            //repaint();
            if (actual == 0) {
                botonDeshacer.setEnabled(false);
            }
            botonRehacer.setEnabled(true);
        }
    }//GEN-LAST:event_botonDeshacerMousePressed
    /**
     *
     */
    private void botonRehacerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRehacerMousePressed
        if (actual < buffers.size() - 1) {
            actual++;
            bufferActual = copiarBuffer(buffers.get(actual));
            //g4 = (Graphics2D) bufferActual.getGraphics();
            // g4.drawImage(bufferActual, 0, 0, null);
            g2.drawImage(bufferActual, 0, 0, null);

            //repaint();
            if (actual == buffers.size() - 1) {
                botonRehacer.setEnabled(false);
            }
            botonDeshacer.setEnabled(true);
        }
    }//GEN-LAST:event_botonRehacerMousePressed

    @Override
    public void paint(Graphics g) {
        super.paintComponents(g);
        // Graphics2D g2 = (Graphics2D) panelLienzo.getGraphics();
        g2.drawImage(bufferActual, 0, 0, null);
        System.out.println("PINTADO");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider anchoTrazo;
    private javax.swing.JButton botonAbrir;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonCirculo;
    private javax.swing.JButton botonColoresAceptar;
    private javax.swing.JButton botonColoresCancelar;
    private javax.swing.JButton botonCuadrado;
    private javax.swing.JButton botonDeshacer;
    private javax.swing.JButton botonElipse;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonLapiz;
    private javax.swing.JButton botonLinea;
    private javax.swing.JButton botonNuevo;
    private javax.swing.JButton botonPaletaColores;
    private javax.swing.JButton botonRectangulo;
    private javax.swing.JButton botonRehacer;
    private javax.swing.JButton botonTexto;
    private javax.swing.JDialog dialogColores;
    private javax.swing.JDialog dialogFichero;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuItem menuArchivoAbrir;
    private javax.swing.JMenuItem menuArchivoGuardar;
    private javax.swing.JMenuItem menuArchivoNuevo;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuItem menuAyudaAcercaDe;
    private javax.swing.JMenuItem menuAyudaParche;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenuItem menuEditarColores;
    private javax.swing.JMenuItem menuEditarDeshacer;
    private javax.swing.JMenuItem menuEditarRehacer;
    private javax.swing.JMenuBar menuSuperior;
    private javax.swing.JPanel panelLienzo;
    private javax.swing.JFileChooser selectorFicheros;
    private javax.swing.JSeparator separador1;
    private javax.swing.JSeparator separador2;
    private javax.swing.JPopupMenu.Separator separador3;
    private javax.swing.JPopupMenu.Separator separador4;
    // End of variables declaration//GEN-END:variables

    /**
     * Método para copiar un Buffer
     *
     * @param buffer sdfsdfsdf
     * @return Devuelve un objeto BufferedImage que es una copia del buffer
     * entregado
     */
    private BufferedImage copiarBuffer(BufferedImage buffer) {
        ColorModel cm = buffer.getColorModel();
        boolean isAlphaPremultiplied = cm.isAlphaPremultiplied();
        WritableRaster raster = buffer.copyData(null);
        return new BufferedImage(cm, raster, isAlphaPremultiplied, null);
    }
}
